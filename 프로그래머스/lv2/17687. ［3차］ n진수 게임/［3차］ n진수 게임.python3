def change(n, c):
    ret = ''
    ndict = {0: '0', 1: '1', 2: '2', 3: '3', 4: '4', 5: '5', 6: '6', 7: '7', 8: '8', 9: '9', 10: 'A', 11: 'B', 12: 'C', 13: 'D', 14: 'E', 15: 'F'}
    if c < n:
        return ndict[c]
    while c != 0:
        rem = c % n
        c = c // n
        ret += ndict[rem]
    return ret[::-1]

def solution(n, t, m, p):
    answer = []
    nzin = {i: i-1 for i in range(2, 11)}
    ref = ''
    tind = [p-1 + m * k for k in range(t)]
    cur = 0
    while len(ref) <= tind[-1]:
        ref += change(n, cur)
        cur += 1
    answer = ''.join([ref[ind] for ind in tind])

    return answer