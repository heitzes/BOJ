from itertools import combinations
from collections import deque
def solution(relation):
    answer = 0
    unique, ans = deque(), []
    nset = set()
    nlen = len(relation[0])
    nlist = [i for i in range(nlen)]
    for i in range(1, nlen + 1):
        unique.extend([list(j) for j in combinations(nlist, i)])
    while unique:
        uniq = unique.popleft()
        for r in relation:
            item = tuple((i, r[i]) for i in uniq)
            if item in nset:
                break
            nset.add(item)
        else:
            ans.append(uniq)
            refunique = deque()
            for u in unique:
                if not set(uniq).issubset(u):
                    refunique.append(u)
            unique = deque((list(refunique)[:]))
    answer = len(ans)
    return answer