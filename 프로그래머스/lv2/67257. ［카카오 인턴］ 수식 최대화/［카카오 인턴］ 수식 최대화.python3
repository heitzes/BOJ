from itertools import permutations
from collections import deque
def calculate(x, a, b):
    if x == '*': 
        return a*b
    elif x == '+':
        return a+b
    else:
        return a-b

def solution(expression):
    answer = 0
    ans = []
    ex = set()
    refnums = ''
    for char in expression:
        if char in ['-', '*', '+']:
            refnums += ' {} '.format(char)
            ex.add(char)
        else:
            refnums += char
    refnums = [i if i in ['-', '*', '+'] else int(i) for i in refnums.split()]
    for p in permutations(ex, len(ex)):
        rnums = deque(refnums)
        for x in p:
            ref = []
            while rnums and x in set(rnums):
                item = rnums.popleft()
                if item == x:
                    ref.append(calculate(x, ref.pop(), rnums.popleft()))
                else:
                    ref.append(item)
            ref.extend(rnums)
            rnums = deque(ref)
        ans.append(abs(rnums[0]))
    answer = max(ans)
            
    return answer