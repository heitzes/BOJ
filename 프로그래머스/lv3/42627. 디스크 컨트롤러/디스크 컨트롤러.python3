import heapq
from collections import defaultdict, deque
def solution(jobs):
    answer = 0
    jobs = sorted(jobs, key=lambda x: (x[0], x[1]))
    request = defaultdict(list)
    for i in jobs:
        request[i[0]].append([i[0], i[1]])
    cur, nxt = 0, jobs[0][0]
    status = True
    heapl = []
    while cur < 1000001:
        heapl.extend(request[cur])
        heapl = deque(sorted(heapl, key=lambda x: x[1]))
        if cur == nxt:
            if heapl:
                node = heapl.popleft()
                nxt += node[1]
                answer += cur + node[1] - node[0]
            else:
                nxt = cur + 1
        cur += 1
    answer = (answer//len(jobs))
    
    return answer