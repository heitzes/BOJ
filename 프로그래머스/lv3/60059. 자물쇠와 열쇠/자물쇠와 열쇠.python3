import copy
def large(n, m, lock):
    largemap = [[0]*(n+2*(m-1)) for _ in range(n+2*(m-1))]
    for i in range(m-1, n+m-1):
        for j in range(m-1, n+m-1):
            largemap[i][j] = lock[i-m+1][j-m+1]
    return largemap    
def rotate(key):
    return list(zip(*key[::-1]))
def check(copyl, key, a, b, n, m):
    for i in range(m):
        for j in range(m):
            copyl[a+i][b+j] += key[i][j]
    for i in range(m-1, n+m-1):
        for j in range(m-1, n+m-1):
            if copyl[i][j] in [0, 2]:
                return False
    return True
def solution(key, lock):
    n, m = len(lock), len(key)
    largelock = large(n, m, lock)
    for _ in range(4):
        key = rotate(key)
        for a in range(n+m-1):
            for b in range(n+m-1):
                copyl = copy.deepcopy(largelock)
                if check(copyl, key, a, b, n, m):
                    return True
    return False